<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 构造方法实例化bean -->
    <bean id="clientService1" class="com.xucc.spring2.instantiation.ClientService"/>

    <!-- 静态工厂实例化bean -->
    <bean id="clientService2" class="com.xucc.spring2.instantiation.ClientService" factory-method="getInstance"/>

    <!-- 实例工厂实例化bean -->
    <bean id="instance" class="com.xucc.spring2.instantiation.InstanceFactory"/>
    <bean id="instanceFactory" factory-bean="instance" factory-method="createString"/>

    <!-- 通过构造方法参数装配的四种方法 -->
    <!-- 1. Bean对其它Bean的引用 -->
    <bean id="female" class="com.xucc.spring2.assemble.Female"/>
    <bean id="male" class="com.xucc.spring2.assemble.Male"/>
    <bean id="human" class="com.xucc.spring2.assemble.Human">
        <constructor-arg index="0" ref="female"/>
        <constructor-arg index="1" ref="male"/>
    </bean>

    <!-- 2. 根据参数类型创建Bean -->
    <bean id="personByType" class="com.xucc.spring2.assemble.Person">
        <constructor-arg type="int" value="21"/>
        <constructor-arg type="java.lang.String" value="xucc"/>
    </bean>

    <!-- 3. 根据参数位置创建Bean -->
    <bean id="personById" class="com.xucc.spring2.assemble.Person">

        <constructor-arg index="0" value="22"/>
        <constructor-arg index="1" value="licc"/>
    </bean>

    <!-- 4. 根据参数名称创建Bean -->
    <bean id="personByName" class="com.xucc.spring2.assemble.Person">

        <constructor-arg name="age" value="22"/>
        <constructor-arg name="name" value="licc"/>
    </bean>

</beans>


